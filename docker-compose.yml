version: '3'

volumes:
  db: {}
  python-venv-cache-api: {}
  python-venv-cache-worker: {}
  python-venv-cache-front: {}
  python-venv-cache-geofaker: {}
  python-venv-cache-minimal-operateur-server: {}
  fluentd-log: {}
  influxdb: {}

services:
  db:
    image: mdillon/postgis
    volumes:
      - db:/var/lib/postgresql-data
    environment:
      - POSTGRES_DB=taxis

  redis:
    image: redis

  api:
    image: le.taxi/api
    volumes:
      - ./containers/api/settings.py:/settings.py
      - python-venv-cache-api:/venv/
      - ./projects/APITaxi:/git/APITaxi
      - ./projects/APITaxi_models:/git/APITaxi_models
      - ./projects/APITaxi_utils:/git/APITaxi_utils
      - ./projects/ZUPC:/tmp/ZUPC
    depends_on:
      - redis
      - db
      - worker
      - geotaxi
      - minimal-operateur-server
    ports:
      - '5000:5000'

  worker:
    image: le.taxi/worker
    volumes:
      - ./containers/api/settings.py:/settings.py
      - python-venv-cache-worker:/venv/
      - ./projects/APITaxi:/git/APITaxi
      - ./projects/APITaxi_models:/git/APITaxi_models
      - ./projects/APITaxi_utils:/git/APITaxi_utils
    depends_on:
      - db
      - redis

  front:
    image: le.taxi/front
    volumes:
      - ./containers/front/settings.py:/settings.py
      - python-venv-cache-front:/venv/
      - ./projects/APITaxi:/git/APITaxi
      - ./projects/APITaxi_models:/git/APITaxi_models
      - ./projects/APITaxi_utils:/git/APITaxi_utils
      - ./projects/APITaxi_front:/git/APITaxi_front
    depends_on:
      - db
    ports:
      - '5101:5000'

  geotaxi:
    image: le.taxi/geotaxi
    volumes:
      - ./projects/GeoTaxi:/git/geotaxi
    depends_on:
      - redis
    ports:
      - '8080:8080'

  geofaker:
    image: le.taxi/geofaker
    volumes:
      - python-venv-cache-geofaker:/venv/
      - ./projects/geofaker:/git/geofaker
    depends_on:
      - geotaxi

  fluentd:
    image: fluentd
    volumes:
      - ./containers/fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - fluentd-log:/fluentd/log

  influxdb:
    image: influxdb
    volumes:
      - influxdb:/var/lib/influxdb
    environment:
      INFLUXDB_DB: taxis

  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'

  minimal-operateur-server:
    image: le.taxi/minimal-operateur-server
    volumes:
      - python-venv-cache-minimal-operateur-server:/venv/
      - ./projects/minimal_operateur_server/:/git/minimal_operateur_server
    ports:
      - '5001:5000'
