version: '3'

volumes:
  db: {}
  python-venv-cache-api: {}
  python-venv-cache-worker: {}
  python-venv-cache-front: {}
  python-venv-cache-geotaxi: {}
  python-venv-cache-geofaker: {}
  fluentd-log: {}
  influxdb: {}
  redis-data: {}
  minimal-operateur-server-settings: {}

services:
  db:
    image: mdillon/postgis
    volumes:
      - db:/var/lib/postgresql-data
    environment:
      - POSTGRES_DB=taxis

  redis:
    image: redis
    volumes:
      - redis-data:/data

  api:
    image: le.taxi/api
    volumes:
      - ./containers/api/settings.py:/settings.py
      - python-venv-cache-api:/venv/
      - ./projects/APITaxi:/git/APITaxi
      - ./projects/APITaxi_models:/git/APITaxi_models
      - ./projects/ZUPC:/tmp/ZUPC
    depends_on:
      - redis
      - db
      - worker
      - influxdb
    ports:
      - '5000:5000'

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - '4999:8080'
    environment:
      BASE_URL: /doc
      URL: http://localhost:5000/swagger.json
      DEFAULT_MODELS_EXPAND_DEPTH: -1

  worker:
    image: le.taxi/worker
    volumes:
      - ./containers/api/settings.py:/settings.py
      - python-venv-cache-worker:/venv/
      - ./projects/APITaxi:/git/APITaxi
      - ./projects/APITaxi_models:/git/APITaxi_models
    depends_on:
      - db
      - redis
      - minimal-operateur-server

  flower:
    image: le.taxi/worker
    command: ["flower", "-A", "APITaxi2.celery_worker.celery", "--pidfile=/tmp/celery.pid", "--address=0.0.0.0"]
    volumes:
      - ./containers/api/settings.py:/settings.py
      - python-venv-cache-worker:/venv/
      - ./projects/APITaxi:/git/APITaxi
      - ./projects/APITaxi_models:/git/APITaxi_models
    depends_on:
      - worker
    ports:
      - '5555:5555'

  front:
    image: le.taxi/front
    volumes:
      - ./containers/front/settings.py:/settings.py
      - python-venv-cache-front:/venv/
      - ./projects/APITaxi:/git/APITaxi
      - ./projects/APITaxi_models:/git/APITaxi_models
      - ./projects/APITaxi_front:/git/APITaxi_front
    depends_on:
      - db
      - redis
      - geotaxi
    ports:
      - '5101:5000'

  geotaxi:
    image: le.taxi/geotaxi
    volumes:
      - ./projects/geotaxi-python:/git/geotaxi-python
      - python-venv-cache-geotaxi:/venv/
    depends_on:
      - api
      - redis
      - fluentd
    ports:
      - '8080:8080/udp'

  geofaker:
    image: le.taxi/geofaker
    volumes:
      - python-venv-cache-geofaker:/venv/
      - ./projects/geofaker:/git/geofaker
    depends_on:
      - geotaxi

  fluentd:
    image: fluentd
    volumes:
      - ./containers/fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - fluentd-log:/fluentd/log

  influxdb:
    image: influxdb
    volumes:
      - influxdb:/var/lib/influxdb
    environment:
      INFLUXDB_DB: taxis

  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'

  minimal-operateur-server:
    build: projects/minimal_operateur_server
    volumes:
      - ./projects/minimal_operateur_server/:/app
      - ./containers/minimal-operateur-server/entrypoint.sh:/entrypoint.sh
      - minimal-operateur-server-settings:/settings
    ports:
      - '5001:5000'
    depends_on:
      - redis
      - db
      - minimal-operateur-server-worker
    user: root
    entrypoint: ['/entrypoint.sh']
    command: ['flask', 'run', '--host', '0.0.0.0']
    environment:
      # File created by entrypoint.sh
      API_SETTINGS: /settings/settings.py
      FLASK_DEBUG: '1'

  minimal-operateur-server-worker:
    build: projects/minimal_operateur_server
    volumes:
      - ./projects/minimal_operateur_server/:/app
      - minimal-operateur-server-settings:/settings
    depends_on:
      - redis
    command: ['flask', 'rq', 'worker']
    environment:
      # File created by entrypoint.sh of minimal-operateur-server
      API_SETTINGS: /settings/settings.py
      FLASK_DEBUG: '1'

  map:
    image: le.taxi/map
    volumes:
      - ./projects/map/:/git/map
    ports:
      - '5102:1234'
      - '33187:33187'
