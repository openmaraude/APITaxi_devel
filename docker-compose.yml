version: '3'

volumes:
  db: {}
  python-venv-cache-api: {}
  python-venv-cache-worker: {}
  python-venv-cache-worker-beat: {}
  python-venv-cache-flower: {}
  python-venv-cache-geotaxi: {}
  python-venv-cache-geofaker: {}
  python-venv-cache-minimal-operateur-server: {}
  python-venv-cache-minimal-operateur-server-worker: {}
  fluentd-log: {}
  influxdb: {}
  redis-data: {}
  npm-cache-console: {}

services:
  db:
    image: mdillon/postgis
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=taxis
    ports:
      - 55432:5432

  redis:
    image: redis
    volumes:
      - redis-data:/data

  api:
    image: le.taxi/api
    volumes:
      - ./containers/api/settings.py:/settings.py
      - python-venv-cache-api:/venv/
      - ./projects/APITaxi:/git/APITaxi
      - ./projects/ZUPC:/tmp/ZUPC
    depends_on:
      - redis
      - db
      - worker
      - influxdb
    ports:
      - '5000:5000'

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - '4999:8080'
    environment:
      BASE_URL: /doc
      URL: http://localhost:5000/swagger.json
      DEFAULT_MODELS_EXPAND_DEPTH: -1

  worker:
    image: le.taxi/worker
    volumes:
      - ./containers/api/settings.py:/settings.py
      - python-venv-cache-worker:/venv/
      - ./projects/APITaxi:/git/APITaxi
    depends_on:
      - db
      - redis
      - minimal-operateur-server
      - worker-beat

  worker-beat:
    image: le.taxi/worker-beat
    volumes:
      - ./containers/api/settings.py:/settings.py
      - python-venv-cache-worker-beat:/venv/
      - ./projects/APITaxi:/git/APITaxi
    depends_on:
      - db
      - redis

  flower:
    image: le.taxi/worker
    command: ["flower", "-A", "APITaxi2.celery_worker.celery", "--pidfile=/tmp/celery.pid", "--address=0.0.0.0"]
    volumes:
      - ./containers/api/settings.py:/settings.py
      - python-venv-cache-flower:/venv/
      - ./projects/APITaxi:/git/APITaxi
    depends_on:
      - worker
    ports:
      - '5555:5555'

  geotaxi:
    image: le.taxi/geotaxi
    volumes:
      - ./projects/geotaxi-python:/git/geotaxi-python
      - python-venv-cache-geotaxi:/venv/
    depends_on:
      - api
      - redis
      - fluentd
    ports:
      - '8080:8080/udp'

  geofaker:
    image: le.taxi/geofaker
    volumes:
      - python-venv-cache-geofaker:/venv/
      - ./projects/geofaker:/git/geofaker
    depends_on:
      - geotaxi

  fluentd:
    image: fluentd
    volumes:
      - ./containers/fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - fluentd-log:/fluentd/log

  influxdb:
    image: influxdb
    volumes:
      - influxdb:/var/lib/influxdb
    environment:
      INFLUXDB_DB: taxis

  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'

  minimal-operateur-server:
    image: le.taxi/minimal-operateur-server
    volumes:
      - python-venv-cache-minimal-operateur-server:/venv/
      - ./projects/minimal_operateur_server/:/git/minimal_operateur_server
      - ./containers/minimal-operateur-server/entrypoint.sh:/entrypoint.sh
    ports:
      - '5001:5000'
    depends_on:
      - redis
      - db
      - minimal-operateur-server-worker

  minimal-operateur-server-worker:
    image: le.taxi/minimal-operateur-server
    volumes:
      - python-venv-cache-minimal-operateur-server:/venv/
      - ./projects/minimal_operateur_server/:/git/minimal_operateur_server
      - ./scripts/wait-for-redis.sh:/wait-for-redis.sh
    depends_on:
      - redis
    command: ['/wait-for-redis.sh', 'redis', '6379', 'flask', 'rq', 'worker']

  console:
    image: le.taxi/console
    working_dir: /git/console
    volumes:
      - npm-cache-console:/root/.npm
      - ./projects/console:/git/console
    ports:
      - '5103:5103'
